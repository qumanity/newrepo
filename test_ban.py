import os
import sqlite3
from datetime import datetime
from vkbottle.bot import Bot, Message
from vkbottle import API

TOKEN = "vk1.a.5bWRa7wwHUl-VkHE7sbxa9huYX1cHxZLFeNOa7H7xeNW-GK5ZGngviGtjF4D2eFkeWtIqdJI00TXK-NU4SpznSRMck0pekmPd0JTvAFMGUDu0_q93XeonG0MSAXkV931iPFTr0F7Ilzka4PW9ArlYAQgH14XznPIeC3LvzjDj3JMhhD_ZOstbBtJRrdUkTvwtxWc7pNJ8uigTj4_Q-hQjA"
bot = Bot(token=TOKEN)
api = API(TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ –ë–î –±–µ—Å–µ–¥—ã
def get_db_name(chat_id: int) -> str:
    os.makedirs("chats", exist_ok=True)
    return os.path.join("chats", f"chat_{chat_id}.db")

def create_chat_db(chat_id: int):
    """
    –°–æ–∑–¥–∞—ë—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —á–∞—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π users –∏ —Ç–∞–±–ª–∏—Ü–µ–π banned_users.
    
    –¢–∞–±–ª–∏—Ü–∞ users:
      - id (INTEGER PRIMARY KEY)
      - role (TEXT, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'user')
      - count_messages (INTEGER, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
      - last_messages (TEXT)
      - ban (INTEGER, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
      - warn (INTEGER, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
      - mute (INTEGER, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
    
    –¢–∞–±–ª–∏—Ü–∞ banned_users:
      - user_id (INTEGER PRIMARY KEY) ‚Äì ID –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      - admin_id (INTEGER) ‚Äì ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã–¥–∞–≤—à–µ–≥–æ –±–∞–Ω
      - reason (TEXT) ‚Äì –ø—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      - ban_date (TEXT) ‚Äì –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    """
    db_name = get_db_name(chat_id)
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            role TEXT DEFAULT 'user',
            count_messages INTEGER DEFAULT 0,
            last_messages TEXT,
            ban INTEGER DEFAULT 0,
            warn INTEGER DEFAULT 0,
            mute INTEGER DEFAULT 0
        )
    """)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É banned_users, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS banned_users (
            user_id INTEGER PRIMARY KEY,
            admin_id INTEGER,
            reason TEXT,
            ban_date TEXT
        )
    """)
    
    conn.commit()
    conn.close()

async def extract_user_id_from_target(message: Message, target: str = None):
    if message.reply_message:
        return message.reply_message.from_id  # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if target:
        if target.startswith("[id"):
            return int(target.split("|")[0][3:])  # –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ [id12345|–ò–º—è]

        if "vk.com" in target:  # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            username = target.split("/")[-1]

            if username.startswith("id"):  # –°—Å—ã–ª–∫–∞ –≤–∏–¥–∞ https://vk.com/id12345
                return int(username[2:])

            try:
                user_info = await bot.api.users.get(user_ids=username)  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ –∫–æ—Ä–æ—Ç–∫–æ–º—É –∏–º–µ–Ω–∏
                if user_info:
                    return user_info[0].id
            except Exception:
                return None  # –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID

    return None  # –ï—Å–ª–∏ target –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID


async def extract_user_id_from_reply(message: Message):
    if message.reply_message:
        return message.reply_message.from_id
    return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω-–ª–∏—Å—Ç
def add_banned_user(chat_id: int, banned_id: int, admin_id: int, reason: str):
    db_name = get_db_name(chat_id)
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    
    cursor.execute("""
        INSERT OR REPLACE INTO banned_users (user_id, admin_id, reason, ban_date)
        VALUES (?, ?, ?, ?)
    """, (banned_id, admin_id, reason, datetime.now().strftime("%Y-%m-%d %H:%M:%S")))
    
    conn.commit()
    conn.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–Ω-–ª–∏—Å—Ç–∞
def remove_banned_user(chat_id: int, user_id: int):
    db_name = get_db_name(chat_id)
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    
    cursor.execute("DELETE FROM banned_users WHERE user_id = ?", (user_id,))
    
    conn.commit()
    conn.close()

def get_db_name(chat_id: int) -> str:
    os.makedirs("chats", exist_ok=True)
    return os.path.join("chats", f"chat_{chat_id}.db")

def is_banned(chat_id: int, user_id: int) -> bool:
    db_name = get_db_name(chat_id)
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute("SELECT admin_id, ban_date FROM banned_users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    conn.close()
    return result if result else None

@bot.on.message(text="/ban <target> <reason>")
async def ban_user_with_target(message: Message, target: str, reason: str):
    await process_ban(message, target, reason)

@bot.on.message(text="/ban <reason>")
async def ban_user_with_reply(message: Message, reason: str):
    if not message.reply_message:
        await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ).")
        return
    target_id = message.reply_message.from_id
    await process_ban(message, target_id, reason)

async def process_ban(message: Message, target: str | int, reason: str):
    chat_id = message.peer_id
    admin_id = message.from_id

    if isinstance(target, str):
        target_id = await extract_user_id_from_target(target)
    else:
        target_id = target

    if not target_id:
        await message.reply("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    if is_banned(chat_id, target_id):
        await message.reply("üö´ –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–Ω–µ.")
        return

    add_banned_user(chat_id, target_id, admin_id, reason)

    try:
        await bot.api.messages.remove_chat_user(chat_id=chat_id - 2000000000, member_id=target_id)
        await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{await get_user_name(target_id)}] –∑–∞–±–∞–Ω–µ–Ω.\nüìå –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    except Exception as e:
        await message.reply(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ: {e}")



@bot.on.message(text="/unban <target>")
async def unban_user_with_target(message: Message, target: str):
    await process_unban(message, target)

@bot.on.message(text="/unban")
async def unban_user_with_reply(message: Message):
    if not message.reply_message:
        await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ).")
        return
    target_id = message.reply_message.from_id
    await process_unban(message, target_id)

async def process_unban(message: Message, target: str | int):
    chat_id = message.peer_id

    if isinstance(target, str):
        target_id = await extract_user_id_from_target(target)
    else:
        target_id = target

    if not target_id:
        await message.reply("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    if not is_banned(chat_id, target_id):
        await message.reply("üö´ –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–∞–Ω–µ–Ω.")
        return

    remove_banned_user(chat_id, target_id)
    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{await get_user_name(target_id)}] —Ä–∞–∑–±–∞–Ω–µ–Ω.")



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
async def get_user_name(user_id: int) -> str:
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å –ø–æ–º–æ—â—å—é API
        user_info = await bot.api.users.get(user_ids=user_id)
        user = user_info[0]
        return f"{user.first_name} {user.last_name}"
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return f"User {user_id}"

def register_user(chat_id: int, user_id: int, role: str = 'user'):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –±–µ—Å–µ–¥—ã, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç.
    –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —É–∫–∞–∑–∞–Ω–Ω–∞—è —Ä–æ–ª—å –∏ count_messages = 0.
    """
    db_name = get_db_name(chat_id)
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()
    cursor.execute("SELECT id FROM users WHERE id = ?", (user_id,))
    if not cursor.fetchone():
        cursor.execute("""
            INSERT INTO users (id, role, count_messages, last_messages, ban, warn, mute)
            VALUES (?, ?, 0, '', 0, 0, 0)
        """, (user_id, role))  # –†–æ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
    conn.commit()
    conn.close()

@bot.on.message(text="/sync")
async def gsync(message: Message):
    chat_id = message.peer_id  # –¥–ª—è –±–µ—Å–µ–¥—ã (peer_id >= 2000000000)
    create_chat_db(chat_id)  # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–µ—Å–µ–¥—ã

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã —á–µ—Ä–µ–∑ API
        members_response = await bot.api.messages.get_conversation_members(peer_id=message.peer_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞
        members = members_response.items if hasattr(members_response, 'items') else []
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        for member in members:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (ID 527055305), —Ç–æ –¥–∞–µ–º —Ä–æ–ª—å owner
            role = "owner" if member.member_id == 527055305 else "user"
            register_user(chat_id, member.member_id, role)  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å —Ä–æ–ª—å—é

        await message.reply(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–µ—Å–µ–¥—ã {chat_id} —Å–æ–∑–¥–∞–Ω–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

@bot.on.message(text="/gban <target> <reason>")
async def global_ban(message: Message, target: str, reason: str):
    admin_id = message.from_id
    admin_name = await get_user_name(admin_id)
    
    # –ü—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç—å ID –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è/—Å—Å—ã–ª–∫–∏
    target_id = await extract_user_id_from_target(message, target)
    
    if not target_id:
        await message.reply("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω-–ª–∏—Å—Ç –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö
    chat_db_files = [f for f in os.listdir("chats") if f.endswith(".db")]
    
    for chat_db in chat_db_files:
        chat_id = int(chat_db.split("_")[1].split(".")[0])  # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        db_name = get_db_name(chat_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω-–ª–∏—Å—Ç –≤—Å–µ—Ö —á–∞—Ç–æ–≤
        conn = sqlite3.connect(db_name)
        cursor = conn.cursor()
        cursor.execute("INSERT OR REPLACE INTO banned_users (user_id, admin_id, reason, ban_date) VALUES (?, ?, ?, ?)",
                       (target_id, admin_id, reason, datetime.now().strftime("%Y-%m-%d %H:%M:%S")))
        conn.commit()
        conn.close()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
        members = await bot.api.messages.get_conversation_members(peer_id=chat_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–∞—Ç–µ
        if any(member.member_id == target_id for member in members.items):
            try:
                # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
                await bot.api.messages.remove_chat_user(chat_id=chat_id - 2000000000, member_id=target_id)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –≤ —á–∞—Ç
                await bot.api.messages.send(
                    peer_id=chat_id,
                    message=(f"[https://vk.com/id{admin_id}|{admin_name}] –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª "
                             f"@id{target_id} ({await get_user_name(target_id)}) –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö.\n"
                             f"–ü—Ä–∏—á–∏–Ω–∞: {reason}"),
                    random_id=0
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ –∏–∑ —á–∞—Ç–∞ {chat_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{await get_user_name(target_id)}] –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≤—Å–µ—Ö –±–µ—Å–µ–¥.")


@bot.on.message(text="/gban <reason>")
async def global_ban_by_reply(message: Message, reason: str):
    admin_id = message.from_id
    admin_name = await get_user_name(admin_id)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    target_id = await extract_user_id_from_reply(message)
    
    if not target_id:
        await message.reply("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω-–ª–∏—Å—Ç –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö
    chat_db_files = [f for f in os.listdir("chats") if f.endswith(".db")]
    
    for chat_db in chat_db_files:
        chat_id = int(chat_db.split("_")[1].split(".")[0])  # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        db_name = get_db_name(chat_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–Ω-–ª–∏—Å—Ç –≤—Å–µ—Ö —á–∞—Ç–æ–≤
        conn = sqlite3.connect(db_name)
        cursor = conn.cursor()
        cursor.execute("INSERT OR REPLACE INTO banned_users (user_id, admin_id, reason, ban_date) VALUES (?, ?, ?, ?)",
                       (target_id, admin_id, reason, datetime.now().strftime("%Y-%m-%d %H:%M:%S")))
        conn.commit()
        conn.close()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
        members = await bot.api.messages.get_conversation_members(peer_id=chat_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–∞—Ç–µ
        if any(member.member_id == target_id for member in members.items):
            try:
                # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
                await bot.api.messages.remove_chat_user(chat_id=chat_id - 2000000000, member_id=target_id)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –≤ —á–∞—Ç
                await bot.api.messages.send(
                    peer_id=chat_id,
                    message=(f"[https://vk.com/id{admin_id}|{admin_name}] –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª "
                             f"@id{target_id} ({await get_user_name(target_id)}) –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö.\n"
                             f"–ü—Ä–∏—á–∏–Ω–∞: {reason}"),
                    random_id=0
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ –∏–∑ —á–∞—Ç–∞ {chat_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{await get_user_name(target_id)}] –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≤—Å–µ—Ö –±–µ—Å–µ–¥.")


@bot.on.message(text="/gunban <target>")
async def global_unban_with_target(message: Message, target: str):
    await process_global_unban(message, target)

@bot.on.message(text="/gunban")
async def global_unban_with_reply(message: Message):
    if not message.reply_message:
        await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ).")
        return
    target_id = message.reply_message.from_id
    await process_global_unban(message, target_id)

async def process_global_unban(message: Message, target: str | int):
    admin_id = message.from_id

    if isinstance(target, str):
        target_id = await extract_user_id_from_target(target)
    else:
        target_id = target

    if not target_id:
        await message.reply("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
    chat_db_files = [f for f in os.listdir("chats") if f.endswith(".db")]

    for chat_db in chat_db_files:
        chat_id = int(chat_db.split("_")[1].split(".")[0])  # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        db_name = get_db_name(chat_id)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î –∏ —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –±–∞–Ω–æ–≤
        conn = sqlite3.connect(db_name)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM banned_users WHERE user_id = ?", (target_id,))
        conn.commit()
        conn.close()

    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|{await get_user_name(target_id)}] —Ä–∞–∑–±–∞–Ω–µ–Ω –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö.")




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–∏–∫–∞ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º get_user_name
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–∏–∫–∞ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º get_user_name
@bot.on.chat_message()
async def auto_kick_banned_users(message: Message):
    chat_id = message.peer_id
    members = await bot.api.messages.get_conversation_members(peer_id=chat_id)
    
    for member in members.items:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫
        ban_info = is_banned(chat_id, member.member_id)
        if ban_info:
            admin_id, ban_date = ban_info
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_name = await get_user_name(admin_id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_profile_link = f"[https://vk.com/id{admin_id}|{admin_name}]"
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∑–∞–±–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_name = await get_user_name(member.member_id)
            
            try:
                # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
                await bot.api.messages.remove_chat_user(chat_id=chat_id - 2000000000, member_id=member.member_id)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–∏–∫–µ
                await bot.api.messages.send(
                    peer_id=chat_id,
                    message=(f"@id{member.member_id} ({user_name}) –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –≤ —Å–≤—è–∑–∏ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π.\n\n"
                             f"–í—ã–¥–∞–ª: {admin_profile_link}\n–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏: {ban_date}"),
                    random_id=0
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ {member.member_id}: {e}")




bot.run_forever()
